{"version":3,"file":"static/js/333.94dadad2.chunk.js","mappings":"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","sources":["redux/toolkit/contacts/selector-contacts.js","components/Phonebook/FilterForPhonbook/FilterForPhoneBook.styled.js","components/Phonebook/FilterForPhonbook/FilterForPhoneBook.jsx","components/Phonebook/FormForPhonebook/FormForPhoneBook.styled.js","components/Phonebook/FormForPhonebook/FormForPhoneBook.jsx","components/Phonebook/ModalChangeContact/ModalChangeContact.styled.js","components/Phonebook/ModalChangeContact/ModalChangeContact.jsx","components/Phonebook/PhoneBookList/PhoneBookList.styled.js","components/Phonebook/PhoneBookList/PhoneBookList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.phonebook.contacts;\nexport const selectFilter = state => state.phonebook.filter;\nexport const selectItems = state => state.phonebook.contacts.items;\n\nexport const selectContactCount = createSelector([selectContacts], contacts => {\n  return contacts.items.length;\n});\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectItems],\n  (filter, items) => {\n    const normalaizedFilter = filter.toLowerCase();\n    return items.filter(contact => {\n      return (\n        contact.name.toLowerCase().includes(normalaizedFilter) ||\n        contact.number.includes(filter)\n      );\n    });\n  }\n);\n","import styled from 'styled-components';\n\nexport const FilterLabelStyled = styled.label`\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n`;\n\nexport const StyledInput = styled.input`\n  border: 2px solid;\n  display: block;\n  height: 40px;\n  width: 400px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  border-radius: ${({ theme }) => theme.radii.md};\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  transition: all 300ms ease-in-out;\n  box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.mycolor};\n  &:hover,\n  :focus,\n  :active,\n  :focus-visible {\n    border: 2px solid;\n    /* border-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.01); */\n    /* background-color: hwb(349 81% 5% / 0.762); */\n    box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.black};\n    outline: none;\n  }\n`;\nexport const Container = styled.div`\n  padding: ${({ theme }) => theme.space[5]}px;\n  padding-top: 0;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { selectFilter } from 'redux/toolkit/contacts/selector-contacts';\nimport {\n  FilterLabelStyled,\n  StyledInput,\n  Container,\n} from './FilterForPhoneBook.styled';\nimport { filterContacts } from 'redux/toolkit/contacts/slice-contacts';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const FilterForPhoneBook = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Container>\n      <FilterLabelStyled>\n        Find contacts by name\n        <StyledInput\n          type=\"text\"\n          value={filter}\n          onChange={e => {\n            dispatch(filterContacts(e.target.value));\n          }}\n        />\n      </FilterLabelStyled>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const ButtonAdd = styled.button`\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.space[3]}px;\n  width: 120px;\n  height: 40px;\n  border-radius: ${({ theme }) => theme.radii.md};\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.mycolor};\n  background-color: ${({ theme }) => theme.colors.white};\n  /* transition: all 300ms ease-in-out; */\n  /* margin-top: ${({ theme }) => theme.space[5]}px; */\n\n  box-shadow: inset 0 0 0 0 crimson;\n\n  transition: color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  &:hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.white};\n    /* background-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.12); */\n    /* box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.black}; */\n\n    box-shadow: inset 200px 0 0 0 crimson;\n  }\n`;\nexport const StyledForm = styled(Form)`\n  padding: ${({ theme }) => theme.space[5]}px;\n  padding-top: 0;\n  display: flex;\n  flex-direction: column;\n`;\nexport const StyledField = styled(Field)`\n  border: 2px solid;\n  display: block;\n  height: 40px;\n  width: 400px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  border-radius: ${({ theme }) => theme.radii.md};\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  transition: all 300ms ease-in-out;\n  box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.mycolor};\n  &:hover,\n  :focus,\n  :active,\n  :focus-visible {\n    border: 2px solid;\n    /* border-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.01); */\n    /* background-color: hwb(349 81% 5% / 0.762); */\n    box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.black};\n    outline: none;\n  }\n`;\nexport const StyledLabel = styled.label`\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n`;\nexport const Counter = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 500;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\n// import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { ButtonSpiner } from 'components/Spiner/Spiner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectContactCount,\n} from 'redux/toolkit/contacts/selector-contacts';\nimport { addContact } from 'redux/toolkit/contacts/operations-contacts';\n\nimport {\n  StyledForm,\n  StyledField,\n  StyledLabel,\n  ButtonAdd,\n  Counter,\n} from './FormForPhoneBook.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Please enter first and last name'),\n  number: yup\n    .string()\n    .min(10)\n    .max(18)\n    .required('Please enter the phone number in the format +380932600501'),\n});\n\nexport const FormForPhoneBook = () => {\n  // const [input, setInput] = useState(null);\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(selectContacts);\n\n  const countContact = useSelector(selectContactCount);\n\n  const handleSubmitFormik = (values, { resetForm }) => {\n    console.log(values);\n    const { name } = values;\n\n    // setInput(values);\n    const isDuplicate = items.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (isDuplicate) {\n      return Notify.warning(`${name} is already in contacts`, {\n        backOverlay: true,\n        timeout: 2000,\n        position: 'center-top',\n        fontSize: '34px',\n        width: '600px',\n        clickToClose: true,\n      });\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmitFormik}\n      validationSchema={schema}\n    >\n      <StyledForm>\n        {countContact > 0 && (\n          <Counter>\n            You have: {countContact}\n            {countContact === 1 ? ' contact' : ' contacts'} in your phonebook\n          </Counter>\n        )}\n\n        <StyledLabel>\n          Name\n          <StyledField\n            placeholder=\"Name Surname\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledField\n            placeholder=\"+380932600501\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </StyledLabel>\n        <ButtonAdd type=\"submit\" disabled={isLoading}>\n          {/* {isLoading && input !== '' && <ButtonSpiner />} */}\n          Add contact\n        </ButtonAdd>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalForm = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: ${({ theme }) => theme.colors.white};\n  padding: ${({ theme }) => theme.space[6]}px;\n  border-radius: 4px;\n`;\n\nexport const ButtonChange = styled.button`\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.space[3]}px;\n  width: 120px;\n  height: 40px;\n  border-radius: ${({ theme }) => theme.radii.md};\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.mycolor};\n  background-color: ${({ theme }) => theme.colors.white};\n\n  box-shadow: inset 0 0 0 0 crimson;\n\n  transition: color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  &:hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.white};\n\n    box-shadow: inset 200px 0 0 0 crimson;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border: 2px solid;\n  display: block;\n  height: 40px;\n  width: 400px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  border-radius: ${({ theme }) => theme.radii.md};\n  padding-left: ${({ theme }) => theme.space[4]}px;\n  transition: all 300ms ease-in-out;\n  box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.mycolor};\n  &:hover,\n  :focus,\n  :active,\n  :focus-visible {\n    border: 2px solid;\n    /* border-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.01); */\n    /* background-color: hwb(349 81% 5% / 0.762); */\n    box-shadow: 2px 2px 2px ${({ theme }) => theme.colors.black};\n    outline: none;\n  }\n`;\nexport const StyledLabel = styled.label`\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.m};\n`;\nexport const ButtonX = styled.button`\n  padding: ${({ theme }) => theme.space[0]}px;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n  transition: all 300ms ease-in-out;\n  &:hover,\n  :focus {\n    /* color: ${({ theme }) => theme.colors.white}; */\n    /* background-color: ${({ theme }) => theme.colors.mycolor}; */\n    transform: scale(1.18);\n    /* box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.black}; */\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { changeContact } from 'redux/toolkit/contacts/operations-contacts';\nimport { selectItems } from 'redux/toolkit/contacts/selector-contacts';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledLabel,\n  Overlay,\n  StyledInput,\n  ButtonChange,\n  ModalForm,\n} from './ModalChangeContact.styled';\n\nconst ModalChangeContact = ({ modalIsOpen, closeModal }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal, modalIsOpen]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isDuplicate = items.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (isDuplicate) {\n      return Notify.warning(`${name} is already in contacts`, {\n        backOverlay: true,\n        timeout: 2000,\n        position: 'center-top',\n        fontSize: '34px',\n        width: '600px',\n        clickToClose: true,\n      });\n    }\n\n    dispatch(\n      changeContact({\n        name,\n        number,\n        id: modalIsOpen,\n      })\n    );\n    setName('');\n    setNumber('');\n    closeModal();\n  };\n\n  const handleBackDropClose = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n  return (\n    <Overlay onClick={handleBackDropClose}>\n      <ModalForm onSubmit={handleSubmit}>\n        <IoCloseOutline\n          onClick={closeModal}\n          size={30}\n          stroke=\"crimson\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            right: '0',\n            cursor: 'pointer',\n          }}\n        />\n\n        <StyledLabel htmlFor=\"\">\n          Name\n          <StyledInput\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </StyledLabel>\n        <StyledLabel htmlFor=\"\">\n          Phone\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Tel\"\n            value={number}\n            onChange={handleChange}\n          />\n        </StyledLabel>\n        <ButtonChange type=\"submit\">Push changes</ButtonChange>\n      </ModalForm>\n    </Overlay>\n  );\n};\n\nModalChangeContact.propTypes = {\n  modalIsOpen: PropTypes.string,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalChangeContact;\n","import styled from 'styled-components';\n\nexport const ButtonDel = styled.button`\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.space[3]}px;\n  width: 120px;\n  height: 40px;\n  border-radius: ${({ theme }) => theme.radii.md};\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.mycolor};\n  background-color: ${({ theme }) => theme.colors.white};\n  /* transition: all 300ms ease-in-out; */\n  /* margin-top: ${({ theme }) => theme.space[5]}px; */\n\n  box-shadow: inset 0 0 0 0 crimson;\n\n  transition: color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  &:hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.white};\n    /* background-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.12); */\n    /* box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.black}; */\n\n    box-shadow: inset 200px 0 0 0 crimson;\n  }\n`;\nexport const ButtonEdit = styled.button`\n  font-size: ${({ theme }) => theme.fontSizes.s};\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.space[3]}px;\n  width: 120px;\n  height: 40px;\n  border-radius: ${({ theme }) => theme.radii.md};\n  color: ${({ theme }) => theme.colors.black};\n  box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.mycolor};\n  background-color: ${({ theme }) => theme.colors.white};\n  /* transition: all 300ms ease-in-out; */\n  /* margin-top: ${({ theme }) => theme.space[5]}px; */\n\n  box-shadow: inset 0 0 0 0 crimson;\n\n  transition: color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  &:hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.white};\n    /* background-color: ${({ theme }) => theme.colors.mycolor}; */\n    /* transform: scale(1.12); */\n    /* box-shadow: 5px 5px 5px ${({ theme }) => theme.colors.black}; */\n\n    box-shadow: inset 200px 0 0 0 crimson;\n  }\n`;\nexport const PhoneItem = styled.li`\n  border-bottom: 1px solid gray;\n  box-shadow: 0px 1px 0px grey;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${({ theme }) => theme.space[2]}px;\n  gap: ${({ theme }) => theme.space[3]}px;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: ${({ theme }) => theme.space[4]}px;\n`;\nexport const Text = styled.p`\n  padding: ${({ theme }) => theme.space[3]}px;\n  font-weight: 500;\n`;\nexport const List = styled.ul`\n  padding: ${({ theme }) => theme.space[5]}px;\n  padding-top: 0;\n`;\n","import React, { useState, useEffect } from 'react';\n// import { ButtonSpiner } from 'components/Spiner/Spiner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/toolkit/contacts/operations-contacts';\n\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/toolkit/contacts/selector-contacts';\nimport ModalChangeContact from '../ModalChangeContact/ModalChangeContact';\nimport {\n  ButtonDel,\n  ButtonEdit,\n  PhoneItem,\n  ItemContainer,\n  Text,\n  List,\n} from './PhoneBookList.styled';\n\nimport { filterContacts } from 'redux/toolkit/contacts/slice-contacts';\n\nexport const PhonebookList = () => {\n  const [modalIsOpen, setModalIsOpen] = useState('');\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const { isLoading } = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    filteredContacts.length === 0 && dispatch(filterContacts(''));\n  }, [filteredContacts, dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleModalOpen = ({ target: { id } }) => {\n    setModalIsOpen(id);\n  };\n  return (\n    <List>\n      {filteredContacts?.map(({ id, name, number }) => {\n        return (\n          <PhoneItem key={id}>\n            <Text>\n              {name}: {number}\n            </Text>\n            <ItemContainer>\n              <ButtonDel\n                type=\"submit\"\n                onClick={() => {\n                  handleDelete(id);\n                }}\n                disabled={isLoading}\n              >\n                {/* {isLoading && <ButtonSpiner />} */}\n                Delete\n              </ButtonDel>\n              {!modalIsOpen && (\n                <ButtonEdit id={id} onClick={handleModalOpen}>\n                  Edit\n                </ButtonEdit>\n              )}\n            </ItemContainer>\n            {modalIsOpen === id && (\n              <ModalChangeContact\n                modalIsOpen={modalIsOpen}\n                closeModal={() => {\n                  setModalIsOpen('');\n                }}\n              />\n            )}\n          </PhoneItem>\n        );\n      })}\n    </List>\n  );\n};\n","import { FilterForPhoneBook } from 'components/Phonebook/FilterForPhonbook/FilterForPhoneBook';\nimport { FormForPhoneBook } from 'components/Phonebook/FormForPhonebook/FormForPhoneBook';\nimport { PhonebookList } from 'components/Phonebook/PhoneBookList/PhoneBookList';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/toolkit/contacts/operations-contacts';\nimport { selectContacts } from 'redux/toolkit/contacts/selector-contacts';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {' '}\n      <h1 style={{ textAlign: 'center', marginTop: '20px' }}>Phonebook</h1>\n      <FormForPhoneBook />\n      {isLoading && !error && <Spiner />}\n      <h2 style={{ textAlign: 'center', marginTop: '5px' }}>Contacts</h2>\n      <FilterForPhoneBook />\n      <PhonebookList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","phonebook","contacts","selectFilter","filter","selectItems","items","selectContactCount","createSelector","length","selectFilteredContacts","normalaizedFilter","toLowerCase","contact","name","includes","number","FilterLabelStyled","styled","theme","space","fontSizes","m","StyledInput","radii","md","colors","mycolor","black","Container","FilterForPhoneBook","dispatch","useDispatch","useSelector","type","value","onChange","e","filterContacts","target","ButtonAdd","s","white","StyledForm","Form","StyledField","Field","StyledLabel","Counter","schema","yup","shape","required","min","max","FormForPhoneBook","isLoading","countContact","initialValues","onSubmit","values","resetForm","console","log","find","Notify","backOverlay","timeout","position","fontSize","width","clickToClose","addContact","validationSchema","placeholder","pattern","title","component","disabled","Overlay","ModalForm","ButtonChange","modalIsOpen","closeModal","useState","setName","setNumber","useEffect","handleKeyDown","event","code","document","body","style","overflow","window","addEventListener","removeEventListener","handleChange","onClick","currentTarget","preventDefault","changeContact","id","size","stroke","top","right","cursor","htmlFor","ButtonDel","ButtonEdit","PhoneItem","ItemContainer","Text","List","PhonebookList","setModalIsOpen","filteredContacts","handleModalOpen","map","deleteContact","handleDelete","error","fetchContacts","textAlign","marginTop","Spiner"],"sourceRoot":""}